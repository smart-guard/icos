<UserControl x:Class="iCos5BACnetScheduleRT.View.ViewExceptionSchedule"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:control="clr-namespace:iCos5BACnetScheduleRT.View.Control"
             xmlns:converter="clr-namespace:iCos5BACnetScheduleRT.View.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1020"
             x:Name="thisControl">

  <!-- Resources -->
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Assets/ControlResources.xaml"/>
      </ResourceDictionary.MergedDictionaries>

      <!-- DatePicker -->
      <DataTemplate x:Key="StartTimeCellTemplate">
        <mah:TimePicker mah:TextBoxHelper.Watermark="시작날짜선택"
                        PickerVisibility="All"
                        SelectedDateTime="{Binding StartItem.Time, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        SelectedTimeFormat="Long"
                        HandVisibility="All"
                        Culture="gl"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        BorderThickness="0"
                        Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                        Background="{Binding StartItem.Time, Converter={converter:NullWarningColor}}" 
                        SelectedDateTimeChanged="StartTimePicker_SelectedDateTimeChanged"/>
      </DataTemplate>
      <DataTemplate x:Key="StopTimeCellTemplate">
        <mah:TimePicker mah:TextBoxHelper.Watermark="종료날짜선택"
                        PickerVisibility="All"
                        SelectedDateTime="{Binding StopItem.Time, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        SelectedTimeFormat="Long"
                        HandVisibility="All"
                        Culture="gl"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        BorderThickness="0"
                        Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                        Background="{Binding StopItem.Time, Converter={converter:NullWarningColor}}" 
                        SelectedDateTimeChanged="StopTimePicker_SelectedDateTimeChanged"/>
      </DataTemplate>

      <!-- ColumnHeader -->
      <Style x:Key="ExceptionCalendarColumnHeaderEx"
             TargetType="{x:Type DataGridColumnHeader}"
             BasedOn="{StaticResource ScheduleItemsDataGridColumnHeaderNormal}">
        <EventSetter Event="Click" Handler="DailySchedulesGridColumnHeader_Click"/>
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>

  <!-- Main -->
  <Border>
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="200"/>
        <RowDefinition Height="1*"/>
      </Grid.RowDefinitions>

      <!-- Header Panel -->
      <Grid Grid.Row="0"
            Margin="10 10 10 5">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="140"/>
          <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <!-- Header -->
        <Border Grid.Column="0"
                Style="{StaticResource BorderHeader}">
          <StackPanel VerticalAlignment="Center">
            <Image VerticalAlignment="Center"
                   Height="26"
                   Margin="0 0 5 0"
                   Source="{StaticResource Bootstrap_lightningDrawingImage}"/>
            <TextBlock x:Name="ExceptionIndex"
                       Style="{StaticResource TextBlockHeader}"/>
          </StackPanel>
        </Border>

        <!-- Body -->
        <Border Grid.Column="1"
                Style="{StaticResource BorderContents}">
          <Grid Margin="10 0 10 0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="300"/>
              <ColumnDefinition Width="120"/>
              <ColumnDefinition Width="300"/>
              <ColumnDefinition Width="1*"/>
              <ColumnDefinition Width="120"/>
            </Grid.ColumnDefinitions>
            
            <!-- Daily Schedule List -->
            <DataGrid x:Name="DailyScheduleListGrid"
                      Grid.Column="0"
                      BorderThickness="1"
                      BorderBrush="LightGray"
                      Margin="5 10 5 10"
                      AutoGenerateColumns="False"
                      EnableColumnVirtualization="True"
                      EnableRowVirtualization="True"
                      CanUserResizeColumns="False"
                      CanUserResizeRows="False"
                      CanUserReorderColumns="False"
                      CanUserSortColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      HeadersVisibility="All"
                      RowHeaderWidth="30"
                      SelectionUnit="FullRow"
                      SelectionMode="Single"
                      GridLinesVisibility="All"
                      SelectedIndex="{Binding SelectedListIndex, Mode=TwoWay, ElementName=thisControl}"
                      RowHeaderTemplate="{StaticResource ScheduleListDataGridRowHeaderTemplate}"
                      ColumnHeaderStyle="{StaticResource ScheduleListDataGridColumnHeader}">
              <DataGrid.Columns>
                <DataGridTemplateColumn Header="시작시간"
                                        Width="1*"
                                        CellTemplate="{StaticResource StartTimeCellTemplate}"/>
                <DataGridTemplateColumn Header="종료시간"
                                        Width="1*"
                                        CellTemplate="{StaticResource StopTimeCellTemplate}"/>
              </DataGrid.Columns>
            </DataGrid>

            <!-- Daily Schedule List Button -->
            <StackPanel Grid.Column="1" 
                        VerticalAlignment="Bottom">
              <Button Height="36" Width="110"
                      Margin="5 0 5 5"
                      Style="{StaticResource ButtonDefault}"
                      IsEnabled="{Binding SelectedIndex, ElementName=DailyScheduleListGrid, Converter={converter:SelectedIndexIsAvailable}}"
                      Click="DailySchedulePreviousAdd_Click">
                <Grid VerticalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="66"/>
                  </Grid.ColumnDefinitions>
                  <Image Grid.Column="0"
                         Source="{StaticResource Bootstrap_clipboard_minusDrawingImage}"
                         Margin="2"/>
                  <TextBlock Grid.Column="1"
                             Text="이전 추가"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Center"
                             FontSize="14"/>
                </Grid>
              </Button>
              <Button Height="36" Width="110"
                      Margin="5 0 5 5"
                      Style="{StaticResource ButtonDefault}"
                      IsEnabled="{Binding ItemsSource, ElementName=DailyScheduleListGrid, Converter={converter:ItemsSourceIsNull}}"
                      Click="DailyScheduleNextAdd_Click">
                <Grid VerticalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="66"/>
                  </Grid.ColumnDefinitions>
                  <Image Grid.Column="0"
                         Source="{StaticResource Bootstrap_clipboard_plusDrawingImage}"
                         Margin="2"/>
                  <TextBlock Grid.Column="1"
                             Text="이후 추가"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Center"
                             FontSize="14"/>
                </Grid>
              </Button>
              <Button Height="36" Width="110"
                      Margin="5 0 5 10"
                      Style="{StaticResource ButtonDefault}"
                      IsEnabled="{Binding SelectedIndex, ElementName=DailyScheduleListGrid, Converter={converter:SelectedIndexIsAvailable}}"
                      Click="DailyScheduleRemove_Click">
                <Grid VerticalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="66"/>
                  </Grid.ColumnDefinitions>
                  <Image Grid.Column="0"
                         Source="{StaticResource Bootstrap_clipboard_xDrawingImage}"
                         Margin="2"/>
                  <TextBlock Grid.Column="1"
                             Text="삭 제"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Center"
                             FontSize="14"/>
                </Grid>
              </Button>
            </StackPanel>

            <!-- Calendar Entry -->
            <Border Grid.Column="2" 
                    BorderThickness="1"
                    BorderBrush="LightGray"
                    CornerRadius="3"
                    Margin="5 10 5 10">
              <control:CalendarEntry x:Name="ScheduleCalendarEntry"
                                     Visibility="{Binding Items.Count, ElementName=DailyScheduleListGrid, Converter={converter:ExceptionCalendarEntryAvailable}}"/>
            </Border>

            <!-- Apply Button -->
            <StackPanel Grid.Column="4" 
                        VerticalAlignment="Bottom">
              <Button Height="36" Width="110"
                      Margin="5 0 5 10"
                      Style="{StaticResource ButtonDefault}"
                      IsEnabled="{Binding ScheduleSet, Converter={converter:BACnetScheduleSetIsAvailable}}"
                      Click="DailyScheudleApply_Click">
                <Grid VerticalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="66"/>
                  </Grid.ColumnDefinitions>
                  <Image Grid.Column="0"
                         Source="{StaticResource Bootstrap_clipboard_checkDrawingImage}"
                         Margin="2"/>
                  <TextBlock Grid.Column="1"
                             Text="적 용"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Center"
                             FontSize="14"/>
                </Grid>
              </Button>
            </StackPanel>
          </Grid>
        </Border>
      </Grid>

      <!-- Daily Scheudle Grid -->
      <DataGrid x:Name="DailySchedulesGrid"
                Grid.Row="1"
                Margin="10 5 10 10"
                AutoGenerateColumns="False"
                EnableColumnVirtualization="True"
                EnableRowVirtualization="True"
                CanUserResizeColumns="False"
                CanUserResizeRows="False"
                CanUserReorderColumns="False"
                CanUserSortColumns="False"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                HeadersVisibility="All"
                RowHeaderWidth="50"
                RowHeight="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={converter:ActualRowHeight}}"
                SelectionUnit="CellOrRowHeader"
                GridLinesVisibility="All"
                IsReadOnly="False"
                RowHeaderTemplate="{StaticResource ScheduleItemsDataGridRowHeaderTemplate}"
                CellStyle="{StaticResource ScheduleItemsDataGridCell}"
                DataContextChanged="DailySchedulesGrid_DataContextChanged"
                SelectedCellsChanged="DailySchedulesGrid_SelectedCellsChanged">
        <DataGrid.Columns>
          <DataGridTemplateColumn Width="2*" 
                                  Header="1" 
                                  HeaderStyle="{StaticResource ExceptionCalendarColumnHeaderEx}">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Grid Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}, Converter={converter:ActualRowCellHeight}}">
                  <ContentPresenter Grid.Row="0" 
                                    ContentTemplate="{StaticResource ScheduleItemsDataGridCellTemplateNormal}"/>
                </Grid>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Width="2*" 
                                  Header="2" 
                                  HeaderStyle="{StaticResource ExceptionCalendarColumnHeaderEx}">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Grid Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}, Converter={converter:ActualRowCellHeight}}">
                  <ContentPresenter Grid.Row="0" 
                                    ContentTemplate="{StaticResource ScheduleItemsDataGridCellTemplateNormal}"/>
                </Grid>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Width="2*" 
                                  Header="3" 
                                  HeaderStyle="{StaticResource ExceptionCalendarColumnHeaderEx}">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Grid Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}, Converter={converter:ActualRowCellHeight}}">
                  <ContentPresenter Grid.Row="0" 
                                    ContentTemplate="{StaticResource ScheduleItemsDataGridCellTemplateNormal}"/>
                </Grid>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Width="2*" 
                                  Header="4" 
                                  HeaderStyle="{StaticResource ExceptionCalendarColumnHeaderEx}">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Grid Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}, Converter={converter:ActualRowCellHeight}}">
                  <ContentPresenter Grid.Row="0" 
                                    ContentTemplate="{StaticResource ScheduleItemsDataGridCellTemplateNormal}"/>
                </Grid>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Width="2*" 
                                  Header="5" 
                                  HeaderStyle="{StaticResource ExceptionCalendarColumnHeaderEx}">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Grid Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}, Converter={converter:ActualRowCellHeight}}">
                  <ContentPresenter Grid.Row="0" 
                                    ContentTemplate="{StaticResource ScheduleItemsDataGridCellTemplateNormal}"/>
                </Grid>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        </DataGrid.Columns>
        <DataGrid.InputBindings>
          <KeyBinding Key="C" Modifiers="Control" Command="Copy" />
          <KeyBinding Key="V" Modifiers="Control" Command="Paste" />
          <KeyBinding Key="Delete" Command="Delete"/>
        </DataGrid.InputBindings>
        <DataGrid.CommandBindings>
          <CommandBinding Command="Copy" Executed="CommandBinding_Copy" />
          <CommandBinding Command="Paste" Executed="CommandBinding_Paste" />
          <CommandBinding Command="Delete" Executed="CommandBinding_Delete" />
        </DataGrid.CommandBindings>
      </DataGrid>

      <!-- Daily Scheudle Cells -->
      <Grid Grid.Row="1"
            Margin="10 55 10 10">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="{Binding RowHeaderWidth, ElementName=DailySchedulesGrid}"/>
          <ColumnDefinition Width="2*"/>
          <ColumnDefinition Width="2*"/>
          <ColumnDefinition Width="2*"/>
          <ColumnDefinition Width="2*"/>
          <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <control:DailySchedule x:Name="DailySchedule1" 
                               Grid.Column="1"
                               Margin="1 0 3 0"
                               SelectedIndex="{Binding SelectedIndexColumn1, ElementName=thisControl}"/>
        <control:DailySchedule x:Name="DailySchedule2" 
                               Grid.Column="2"
                               Margin="1 0 3 0"
                               SelectedIndex="{Binding SelectedIndexColumn2, ElementName=thisControl}"/>
        <control:DailySchedule x:Name="DailySchedule3" 
                               Grid.Column="3"
                               Margin="1 0 3 0"
                               SelectedIndex="{Binding SelectedIndexColumn3, ElementName=thisControl}"/>
        <control:DailySchedule x:Name="DailySchedule4" 
                               Grid.Column="4"
                               Margin="1 0 3 0"
                               SelectedIndex="{Binding SelectedIndexColumn4, ElementName=thisControl}"/>
        <control:DailySchedule x:Name="DailySchedule5" 
                               Grid.Column="5"
                               Margin="1 0 3 0"
                               SelectedIndex="{Binding SelectedIndexColumn5, ElementName=thisControl}"/>
      </Grid>
    </Grid>
  </Border>
</UserControl>
